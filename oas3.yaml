openapi: 3.0.0
info:
  version: '1.0'
  title: "Gestione Bar"
  description: Gestine Bar Ã¨ un software per facilitare la gestione di una birreria.
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  /manager:
    get:
      description: >-
        Gets the list of managers.
      summary: Shows the list of all managers.
      responses:
        '200':
          description: 'Collection of manager'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
        "400":
          description: "Invalid status value"
  /manager/users:
    post:
      description: >-
          Creates an new user.
      summary: Adds an new user.
      responses:
        '201':
          description: 'User created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created user.
        "405":
            description: "Invalid input"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
    get:
      description: >-
        Gets the list all users.
      summary: Shows the list all users.
      responses:
        '200':
          description: 'Collection of users'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
  /manager/users/{userId}:
    get:
        description: >-
          Gets a user.
        summary: Shows a user by his id.
        responses:
          '200':
            description: 'Collection of users'
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Users'
    put:
      description: >-
        Update an user.
      summary: Updates an user by his id.
      responses:
        '201':
          description: 'User created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created user.
        "400":
            description: "Invalid ID supplied"
        "404":
          description: "User not found"
        "405":
          description: "Validation exception"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
    delete:
      description: >-
        Delete an user by his id
      summary: Deletes an user.
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "User not found"
components:
  schemas:
    Users:
      type: object
      required:
        - id
        - email
        - category
      properties:
        id:
          type: integer
          description: 'ID of the user'
        email:
          type: string
          description: 'Email address of the user'
        category:
          type: string
          description: 'Category of the user'